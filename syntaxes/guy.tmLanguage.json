{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "guy",
	"patterns": [
		{
			"include": "#guy"
		}
	],
	"scopeName": "source.guy",
	"repository": {
		"guy": {
			"patterns": [{
				"match": "^\\s*(---)",
				"captures":
				{
					"1":
					{
						"name": "punctuation.separator.guy"
					}
				}
			},
			{
				"match": "^\\s*((\\$)\\w+)\\s*(=)",
				"captures":
                    {
                        "1":
                        {
							"name": "variable.other.declaration.register.guy"
						},
                        "2":
                        {
							"name": "punctuation.register.declaration.guy"
                        },
                        "3":
                        {
                            "name": "punctuation.equals.guy"
                        }
                    }
			},
			{
				"match": "^\\s*((#)\\w+)\\s*(=)\\s*(-?[0-9]+\\.?[0-9]*)\\b",
				"captures":
                    {
                        "1":
                        {
							"name": "constant.numeric.declaration.guy"
						},
                        "2":
                        {
							"name": "punctuation.constant.declaration.guy"
                        },
                        "3":
                        {
                            "name": "punctuation.equals.guy"
                        }
                    }
			},
			{
				"match": "^\\s*((@)\\w+)\\b",
				"captures":
				{
					"1":
					{
						"name": "constant.other.label.declaration.guy"
					},
					"2":
					{
						"name": "punctuation.label.declaration.guy"
					}
				}
			},
			{
				"match": "(\\{)(debug)(\\})",
				"captures":
				{
					"1":
					{
						"name": "punctuation.definition.annotation.begin.debug.guy"
					},
					"2":
					{
						"name": "variable.annotation.debug.guy"
					},
					"3":
					{
						"name": "punctuation.definition.annotation.end.debug.guy"
					}
				}
			},
			{
				"match": "(\\{)([a-z]+)(\\})",
				"captures":
				{
					"1":
					{
						"name": "punctuation.definition.annotation.begin.guy"
					},
					"2":
					{
						"name": "variable.annotation.guy"
					},
					"3":
					{
						"name": "punctuation.definition.annotation.end.guy"
					}
				}
			},
			{
				"match": "((;).*)$",
				"captures":
				{
					"1":
					{
						"name": "comment.line.semicolon.guy"
					},
					"2":
					{
						"name": "punctuation.comment.guy"
					}
				}
			},
			{
				"match": "(CODE\\s*([0-7]))",
				"captures":
				{
					"1":
					{
						"name": "meta.namespace.guy"
					},
					"2":
					{
						"name": "meta.namespace.id.guy"
					}
				}
			},
			{
				"match": "(\\|)",
				"captures":
				{
					"1":
					{
						"name": "punctuation.page.guy"
					}
				}
			},
			{
				"match": "(\\[)",
				"captures":
				{
					"1":
					{
						"name": "punctuation.memory.begin.guy"
					}
				}
			},
			{
				"match": "(\\])",
				"captures":
				{
					"1":
					{
						"name": "punctuation.memory.end.guy"
					}
				}
			},
			{
				"match": "(>>)?\\s*(\")([^\"]*)((;).*)",
				"captures":
				{
					"1":
					{
						"name": "keyword.operator.stringcount.prefix.guy"
					},
					"2":
					{
						"name": "punctuation.definition.string.begin.guy"
					},
					"3":
					{
						"name": "string.quoted.double.guy"
					},
					"4":
					{
						"name": "comment.line.semicolon.guy"
					},
					"5":
					{
						"name": "punctuation.comment.guy"
					}
				}
			},
			{
				"match": "(>>)?\\s*(\")([^\"]*)(\")\\s*(<<)?",
				"captures":
				{
					"1":
					{
						"name": "keyword.operator.stringcount.prefix.guy"
					},
					"2":
					{
						"name": "punctuation.definition.string.begin.guy"
					},
					"3":
					{
						"name": "string.quoted.double.guy"
					},
					"4":
					{
						"name": "punctuation.definition.string.end.guy"
					},
					"5":
					{
						"name": "keyword.operator.stringcount.postfix.guy"
					}
				}
			},
			{
				"match": "(>>)?\\s*(\")([^\"]*)",
				"captures":
				{
					"1":
					{
						"name": "keyword.operator.stringcount.prefix.guy"
					},
					"2":
					{
						"name": "punctuation.definition.string.begin.guy"
					},
					"3":
					{
						"name": "string.quoted.double.guy"
					}
				}
			},
			{
				"match": "(\")",
				"captures":
				{
					"1":
					{
						"name": "punctuation.definition.string.guy"
					}
				}
			},
			{
				"match": "((\\$)0)\\b",
				"captures":
				{
					"1":
					{
						"name": "keyword.other.register.zero.guy"
					},
					"2":
					{
						"name": "punctuation.register.zero.guy"
					}
				}
			},
			{
				"match": "((\\$)1)\\b",
				"captures":
				{
					"1":
					{
						"name": "keyword.other.register.one.guy"
					},
					"2":
					{
						"name": "punctuation.register.one.guy"
					}
				}
			},
			{
				"match": "((\\$)2)\\b",
				"captures":
				{
					"1":
					{
						"name": "keyword.other.register.two.guy"
					},
					"2":
					{
						"name": "punctuation.register.two.guy"
					}
				}
			},
			{
				"match": "((\\$)3)\\b",
				"captures":
				{
					"1":
					{
						"name": "keyword.other.register.three.guy"
					},
					"2":
					{
						"name": "punctuation.register.three.guy"
					}
				}
			},
			{
				"match": "((\\$)4)\\b",
				"captures":
				{
					"1":
					{
						"name": "keyword.other.register.four.guy"
					},
					"2":
					{
						"name": "punctuation.register.four.guy"
					}
				}
			},
			{
				"match": "((\\$)5)\\b",
				"captures":
				{
					"1":
					{
						"name": "keyword.other.register.five.guy"
					},
					"2":
					{
						"name": "punctuation.register.five.guy"
					}
				}
			},
			{
				"match": "((\\$)6)\\b",
				"captures":
				{
					"1":
					{
						"name": "keyword.other.register.six.guy"
					},
					"2":
					{
						"name": "punctuation.register.six.guy"
					}
				}
			},
			{
				"match": "((\\$)7)\\b",
				"captures":
				{
					"1":
					{
						"name": "keyword.other.register.seven.guy"
					},
					"2":
					{
						"name": "punctuation.register.seven.guy"
					}
				}
			},
			{
				"match": "^\\s*(load|save|clr|set|page|flag|swp|add|sub-|sub|mul|div-|div|mod|pow|math|stack|look|and|or|xor|shl|shr|rotl|rotr|pad|flagi|flagf|casti|castf|fcmp|fjmp|ffwd|fbck|fret|fcall|fop|floop|sin|cos|tan|asin|acos|atan|rng|not|sqrt|log|exp|abs|push|peek|pop|spage|reset|swzl|swzr|swz)",
				"captures":
				{
					"1":
					{
						"name": "keyword.other.guy"
					}
				}
			},
			{
				"match": "^\\s*(info|pc|sp|state|x|y|time|weapon|ammo|height|wheight|score|countdown|killer|enemies|facing|wwidth|angle|mode|lasthit|hits|kills|bullets|deaths|udeaths|match|sayin|shoutin|hp|maxhp)",
				"captures":
				{
					"1":
					{
						"name": "keyword.other.info.guy"
					}
				}
			},
			{
				"match": "^\\s*(fire|use|arm|act|face|raise|lower|idle|aim|walk|run|drop|leap|lift|right|left|strike)",
				"captures":
				{
					"1":
					{
						"name": "keyword.other.action.guy"
					}
				}
			},
			{
				"match": "^\\s*(comm|say[1-9]?|shout[1-9]?)",
				"captures":
				{
					"1":
					{
						"name": "keyword.other.communication.guy"
					}
				}
			},
			{
				"match": "^\\s*(cmp=|cmp<|cmp>)",
				"captures":
				{
					"1":
					{
						"name": "keyword.other.cmp.guy"
					}
				}
			},
			{
				"match": "^\\s*(debug|snap)\\b",
				"captures":
				{
					"1":
					{
						"name": "keyword.other.debug.guy"
					}
				}
			},
			{
				"match": "^\\s*(end|int|wait|code|exec)",
				"captures":
				{
					"1":
					{
						"name": "keyword.other.directive.guy"
					}
				}
			},
			{
				"match": "^\\s*(goto)",
				"captures":
				{
					"1":
					{
						"name": "keyword.control.jump.guy"
					}
				}
			},
			{
				"match": "^\\s*(jmp!|jmp0|jmp)",
				"captures":
				{
					"1":
					{
						"name": "keyword.control.jump.jmp.guy"
					}
				}
			},
			{
				"match": "^\\s*(fwd!|fwd0|fwd)",
				"captures":
				{
					"1":
					{
						"name": "keyword.control.jump.fwd.guy"
					}
				}
			},
			{
				"match": "^\\s*(bck!|bck0|bck)",
				"captures":
				{
					"1":
					{
						"name": "keyword.control.jump.bck.guy"
					}
				}
			},
			{
				"match": "^\\s*(call!|call0|call)",
				"captures":
				{
					"1":
					{
						"name": "keyword.control.jump.call.guy"
					}
				}
			},
			{
				"match": "^\\s*(ret!|ret0|ret)",
				"captures":
				{
					"1":
					{
						"name": "keyword.control.jump.ret.guy"
					}
				}
			},
			{
				"match": "^\\s*(loop!|loop<)",
				"captures":
				{
					"1":
					{
						"name": "keyword.control.jump.loop.guy"
					}
				}
			},
			{
				"match": "(<<|>>|vv|\\^\\^)",
				"captures":
				{
					"1":
					{
						"name": "keyword.operator.guy"
					}
				}
			},
			{
				"match": "((\\$)\\w+)\\b",
				"captures":
				{
					"1":
					{
						"name": "variable.other.register.guy"
					},
					"2":
					{
						"name": "punctuation.register.guy"
					}
				}
			},
			{
				"match": "((#)\\w+)\\b",
				"captures":
				{
					"1":
					{
						"name": "constant.numeric.guy"
					},
					"2":
					{
						"name": "punctuation.constant.guy"
					}
				}
			},
			{
				"match": "((@)\\w+)\\b",
				"captures":
				{
					"1":
					{
						"name": "constant.other.label.guy"
					},
					"2":
					{
						"name": "punctuation.label.guy"
					}
				}
			},
			{
				"match": "(,)",
				"captures":
				{
					"1":
					{
						"name": "punctuation.optional.comma.guy"
					}
				}
			}
			]
		}
	}
}
